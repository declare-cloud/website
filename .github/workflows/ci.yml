name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: declare-cloud/website

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Install Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    # Calculate version using standard-version, based on commit history
    - name: Calculate version from conventional commits
      id: version
      run: |
        bun run release
        echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

    - name: Update Helm Chart version
      run: |
        sed -i "s/^version:.*/version: ${VERSION}/" chart/Chart.yaml
        sed -i "s/^appVersion:.*/appVersion: \"${VERSION}\"/" chart/Chart.yaml

    - name: Install dependencies
      run: bun install
    - name: Format check
      run: bun run format -- --check
    - name: Lint
      run: bun run lint
    - name: Build app
      run: bun run build
    - name: Unit tests
      run: bun test

    # E2E tests setup
    - name: Install Playwright Browsers
      run: bunx playwright install --with-deps
    - name: E2E tests
      run: bun run test:e2e -- --reporter=dot

    # Docker build and push
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    # Helm chart packaging and pushing
    - name: Set up Helm
      uses: azure/setup-helm@v4
    - name: Package Helm chart
      run: helm package chart --destination chart-out
    - name: Login to Helm OCI registry
      env:
        HELM_EXPERIMENTAL_OCI: 1
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin
    - name: Push Helm chart to GHCR
      env:
        HELM_EXPERIMENTAL_OCI: 1
      run: |
        helm push chart-out/*.tgz oci://${{ env.REGISTRY }}/declare-cloud

