name: Cleanup Artifacts

on:
  delete:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

jobs:
  cleanup-ghcr:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Delete container images for PRs and old main builds
        uses: actions/github-script@v7
        with:
          script: |
            const prTagPrefix = `0.0.0-pr-`;
            const devTagPrefix = `dev-`;
            const branchName = context.payload?.ref?.replace(/^refs\/heads\//, '').replace(/\//g, '-');

            const versions = await github.rest.packages.getAllPackageVersionsForPackageOwnedByOrg({
              package_type: 'container',
              package_name: 'website',
              org: context.repo.owner
            });

            const mainBuilds = [];

            for (const v of versions.data) {
              const tags = v.metadata.container.tags || [];
              const isTaggedRelease = tags.some(t => /^v\d+\.\d+\.\d+$/.test(t));
              const isMainDev = tags.some(t => t.startsWith(devTagPrefix));
              const isPR = branchName
                ? tags.some(t => t.includes(branchName) || t.startsWith(prTagPrefix))
                : tags.some(t => t.startsWith(prTagPrefix));

              if (!isTaggedRelease && isPR) {
                await github.rest.packages.deletePackageVersionForOrg({
                  package_type: 'container',
                  package_name: 'website',
                  org: context.repo.owner,
                  package_version_id: v.id
                });
              } else if (isMainDev) {
                mainBuilds.push(v);
              }
            }

            mainBuilds.sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at));
            const oldMain = mainBuilds.slice(5);
            for (const v of oldMain) {
              await github.rest.packages.deletePackageVersionForOrg({
                package_type: 'container',
                package_name: 'website',
                org: context.repo.owner,
                package_version_id: v.id
              });
            }

  cleanup-helm:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Delete Helm charts for PRs and old main builds
        uses: actions/github-script@v7
        with:
          script: |
            const chartName = 'declare-cloud';
            const prTagPrefix = `0.0.0-pr-`;
            const devTagPrefix = `dev-`;
            const branchName = context.payload?.ref?.replace(/^refs\/heads\//, '').replace(/\//g, '-');

            const charts = await github.rest.packages.getAllPackageVersionsForPackageOwnedByOrg({
              package_type: 'container',
              package_name: chartName,
              org: context.repo.owner
            });

            const mainCharts = [];

            for (const chart of charts.data) {
              const tags = chart.metadata.container.tags || [];
              const isTaggedRelease = tags.some(t => /^v\d+\.\d+\.\d+$/.test(t));
              const isMainDev = tags.some(t => t.startsWith(devTagPrefix));
              const isPR = branchName
                ? tags.some(t => t.includes(branchName) || t.startsWith(prTagPrefix))
                : tags.some(t => t.startsWith(prTagPrefix));

              if (!isTaggedRelease && isPR) {
                await github.rest.packages.deletePackageVersionForOrg({
                  package_type: 'container',
                  package_name: chartName,
                  org: context.repo.owner,
                  package_version_id: chart.id
                });
              } else if (isMainDev) {
                mainCharts.push(chart);
              }
            }

            mainCharts.sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at));
            const oldMainCharts = mainCharts.slice(5);
            for (const chart of oldMainCharts) {
              await github.rest.packages.deletePackageVersionForOrg({
                package_type: 'container',
                package_name: chartName,
                org: context.repo.owner,
                package_version_id: chart.id
              });
            }
