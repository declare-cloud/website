name: Deploy Website

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        default: staging
        type: choice
        options:
          - dev
          - staging
          - production
      chart_version:
        description: "Helm chart version (optional)"
        required: false
      runner:
        description: "Runner label"
        required: true
        default: default-runners
        type: choice
        options:
          - default-runners

  push:
    branches:
      - main
    paths:
      - '**/Chart.yaml'
      - '.github/workflows/deploy.yml'

  release:
    types: [created]

jobs:
  preview:
    name: Helm Diff Preview
    runs-on: ${{ github.event.inputs.runner || 'default-runners' }}

    env:
      RELEASE_NAME: website
      NAMESPACE: ${{ github.event.inputs.environment || 'production' }}-website
      CHART_REF: ghcr.io/declare-cloud/helm/website
      DEFAULT_STAGING_CHART_VERSION: 0.0.0-dev-latest

    outputs:
      chart_version: ${{ steps.chart.outputs.chart_version }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.29.0

      - name: Install Helm Diff plugin
        run: |
          helm plugin install https://github.com/databus23/helm-diff || true

      - name: Install GitHub CLI
        uses: cli/gh-action@v2

      - name: Determine chart version
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: chart
        run: |
          if [ -n "${{ github.event.inputs.chart_version }}" ]; then
            echo "chart_version=${{ github.event.inputs.chart_version }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.environment }}" = "staging" ]; then
            echo "chart_version=${{ env.DEFAULT_STAGING_CHART_VERSION }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.environment }}" = "dev" ]; then
            pr_number=$(gh pr list --state merged --base main --limit 1 --json number -q '.[0].number')
            dev_tag="0.0.0-pr${pr_number}"
            echo "chart_version=$dev_tag" >> $GITHUB_OUTPUT
          else
            tags=$(curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://ghcr.io/v2/${{ env.CHART_REF }}/tags/list | jq -r '.tags[]')
            latest=$(echo "$tags" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -Vr | head -n1)
            echo "chart_version=$latest" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GHCR (Helm OCI)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username declare-cloud --password-stdin

      - name: Show Helm diff
        run: |
          helm diff upgrade "$RELEASE_NAME" "oci://$CHART_REF" \
            --namespace "$NAMESPACE" \
            --version "${{ steps.chart.outputs.chart_version }}" \
            --allow-unreleased \
            ${{ vars.HELM_EXTRA_ARGS }}

  deploy:
    name: Deploy with Approval
    needs: preview
    runs-on: ${{ github.event.inputs.runner || 'default-runners' }}
    timeout-minutes: 120
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}
      url: https://github.com/${{ github.repository }}/deployments

    env:
      RELEASE_NAME: website
      NAMESPACE: ${{ github.event.inputs.environment || 'production' }}-website
      CHART_REF: ghcr.io/declare-cloud/helm/website

    steps:
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Log in to GHCR (Helm OCI)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username declare-cloud --password-stdin

      - name: Deploy Helm chart from GHCR
        id: helm_deploy
        continue-on-error: true
        run: |
          echo "Starting Helm upgrade..."
          helm upgrade --install "$RELEASE_NAME" "oci://$CHART_REF" \
            --namespace "$NAMESPACE" \
            --create-namespace \
            --atomic \
            --version "${{ needs.preview.outputs.chart_version }}" \
            ${{ vars.HELM_EXTRA_ARGS }}

      - name: Rollback on Helm failure (only for staging/production)
        if: |
          steps.helm_deploy.outcome == 'failure' &&
          (github.event.inputs.environment == 'staging' || github.event.inputs.environment == 'production')
        run: |
          echo "⚠️ Helm upgrade failed for ${{ github.event.inputs.environment }}. Attempting rollback..."
          helm rollback "$RELEASE_NAME" --namespace "$NAMESPACE" || echo "⚠️ Rollback failed or not applicable."
