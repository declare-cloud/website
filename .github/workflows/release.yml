name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: declare-cloud/website

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Format check
        run: bun run format:check

      - name: Lint
        run: bun run lint:check

      - name: Unit tests
        run: bun run test:coverage

      - name: Get version from tag
        id: get_version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update Helm Chart version
        run: |
          sed -i "s/^version:.*/version: ${VERSION}/" chart/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${VERSION}\"/" chart/Chart.yaml

      - name: Lint Helm chart
        run: helm lint chart

      - name: Build app
        run: bun run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-${{ github.sha }}

      - name: Scan Docker image
        run: |
          docker scout cves ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Package Helm chart
        run: helm package chart --destination chart-out

      - name: Login to Helm OCI registry
        env:
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.REGISTRY }} --username ${{ github.actor }} --password-stdin

      - name: Push Helm chart to GHCR
        env:
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          helm push chart-out/*.tgz oci://${{ env.REGISTRY }}/declare-cloud

      - name: Generate Release Notes
        id: release_notes
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: '.github/release-changelog-builder-config.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body: ${{ steps.release_notes.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
